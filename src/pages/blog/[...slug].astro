---
import { contentfulClient, type BlogPost } from '../../lib/contentful';
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import Layot from '@/layouts/Layot.astro';

import BlogPostContent from '@/components/BlogPostContent';

export async function getStaticPaths() {
  const { items } = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
  });

	function calcReadingTime(content: any): number {
		if (!content) return 0;
		const text = (content.content || []).map((c: any) => c.value).join(' ');
		const wordsPerMinute = 200; // Average reading speed
		const words = text.trim().split(/\s+/).length;
		return Math.ceil(words / wordsPerMinute);
	}

  return items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      description: item.fields.content,
      bannerUrl: (item.fields.banner as any)?.fields?.file?.url ?? null,
      date: item.fields.date ? new Date(item.fields.date as any).toLocaleDateString() : new Date(item.sys.updatedAt).toLocaleDateString(),
      updatedDate: new Date(item.sys.updatedAt).toLocaleDateString(),
			// Optionally add author and reading_time if available
			author: item.fields.author ?? null,
			reading_time: calcReadingTime(item.fields.content),
    },
  }));
}

const { title, description, bannerUrl, date, updatedDate } = Astro.props;

// Compose post object for BlogPostContent
const post = {
  title,
  description,
  bannerUrl,
  date,
  updatedDate,
  // Optionally add author and reading_time if available in Astro.props
  author: Astro.props.author,
  reading_time: Astro.props.reading_time,
};
---

<Layot title={title}>
  <div class="bg-gray-50 min-h-screen pt-20">
    <BlogPostContent post={post} />
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <footer class="mt-16 pt-8 border-t border-gray-200">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-4">
            <a href="/blog" class="btn btn-secondary">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Voltar
            </a>
          </div>
        </div>
      </footer>
    </div>
  </div>
</Layot>
